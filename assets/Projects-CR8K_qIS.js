import{r as h,j as e}from"./react-DYH0GjtO.js";import{_ as B}from"./react-material-ui-carousel-BqRm0wAI.js";import{L as k}from"./react-router-dom-DkaW0e_f.js";import{C as b,b as D,D as c,B as m,T as n,L as u,e as g,f as x,g as v,h as E,M as T,G as y}from"./@mui-DkpqcusS.js";import"./@babel-Ci-rzA-s.js";import"./framer-motion-D2AX_203.js";import"./tslib-B3HLFDQ4.js";import"./hey-listen-DC2OBYIo.js";import"./style-value-types-B-VcsyVV.js";import"./popmotion-FX10--rG.js";import"./framesync-DhFHr8mH.js";import"./react-dom-COzWVqkv.js";import"./scheduler-DckzrJrc.js";import"./react-router-CzNJ0ar9.js";import"./@remix-run-3RjNJ9fY.js";import"./react-is-bRM3snkL.js";import"./@emotion-wHFImRRo.js";import"./hoist-non-react-statics-c_oXS48o.js";import"./stylis-FDnFs_-n.js";import"./clsx-B-dksMZM.js";import"./react-transition-group-B-ESzoyQ.js";import"./@popperjs-BQBsAJpH.js";function L(i,o){h.useEffect(()=>{function a(l){i.current&&!i.current.contains(l.target)&&o()}return document.addEventListener("mousedown",a),()=>{document.removeEventListener("mousedown",a)}},[i,o])}const R=({enablePictures:i=!1,onClose:o,...a})=>{const l=h.useRef(null);L(l,o);const f=["/img/loading_placeholder.png"],j=(r,t)=>{f[r-1]=t};for(let r=1;r<=a.imgNum;r++){let t=`${a.imgSrc}/${r}.png`;j(r,t)}const p=r=>{const t=[];let s=r;const C=100;for(;s.length>0;){let w=s.indexOf(".");if(w===-1){t.push(s);break}let d=w+1;if(t.push(s.substring(0,d)),s=s.substring(d).trim(),d<C){d=s.indexOf(".")+1;let S=t[t.length-1],N=s.substring(0,d),I=S.concat(" ",N);t.pop(),t.push(I),s=s.substring(d).trim()}}return t};return e.jsx("div",{className:"modal-container",children:e.jsx(b,{className:"modal",ref:l,children:e.jsxs("div",{className:"body",children:[e.jsx("div",{className:"title",children:a.link?e.jsxs(k,{className:"link",to:a.link,target:"_blank",rel:"noopener noreferrer",children:[a.title,e.jsx(D,{className:"launch-icon"})]}):a.title}),i?e.jsxs("div",{className:"carousel-container",children:[e.jsx(c,{flexItem:!0,variant:"middle",className:"divider"}),e.jsx(b,{sx:{borderRadius:"0px"},children:e.jsx(B,{className:"carousel",changeOnFirstRender:!0,autoPlay:!0,duration:1e3,interval:5e3,fullHeightHover:!0,indicators:!1,animation:"slide",loading:"lazy",navButtonsProps:{style:{borderRadius:"0px"}},children:f.map((r,t)=>e.jsx("img",{className:"image",src:r,alt:"",loading:"lazy"},t))})})]}):e.jsx(e.Fragment,{}),e.jsx(c,{flexItem:!0,variant:"middle",className:"divider"}),e.jsxs(m,{className:"details",children:[e.jsxs(m,{className:"overview-container",children:[e.jsx(n,{variant:"h5",gutterBottom:!0,children:"Overview"}),p(a.desc).map((r,t)=>e.jsx(n,{className:"text",children:r},t))]}),e.jsx(c,{flexItem:!0,variant:"middle",className:"divider"}),e.jsxs(m,{className:"duration-container",children:[e.jsx(n,{variant:"h5",gutterBottom:!0,children:"Duration"}),e.jsx(n,{className:"text",children:a.duration})]}),e.jsx(c,{flexItem:!0,variant:"middle",className:"divider"}),e.jsxs(m,{className:"projstruc-container",children:[e.jsx(n,{variant:"h5",gutterBottom:!0,children:"Project Structure"}),Object.values(a.projstructure).map((r,t)=>e.jsxs(u,{className:"list",children:[e.jsxs(g,{className:"header",children:[e.jsxs(n,{sx:{fontSize:"1.15rem"},children:[t+1,"."," "]}),e.jsx(n,{sx:{fontSize:"1.15rem",textDecoration:"bold"},children:r.title})]},t),e.jsx(u,{disablePadding:!0,children:e.jsx(g,{sx:{paddingLeft:"30px"},children:e.jsx(x,{primary:r.desc})})})]}))]}),e.jsx(c,{flexItem:!0,variant:"middle",className:"divider"}),e.jsxs(m,{children:[e.jsx(n,{variant:"h5",gutterBottom:!0,children:"Core Features"}),Object.values(a.features).map((r,t)=>e.jsxs(u,{className:"list",children:[e.jsxs(g,{className:"header",children:[e.jsx(v,{sx:{width:"1%",marginRight:"1%"}}),e.jsx(n,{sx:{fontSize:"1.15rem",textDecoration:"bold"},children:r.title})]},t),e.jsx(u,{disablePadding:!0,children:e.jsxs(g,{sx:{paddingLeft:"30px"},children:[e.jsx(v,{sx:{width:"1%",marginRight:"1%"}}),e.jsx(x,{primary:r.desc})]})})]}))]}),e.jsx(c,{flexItem:!0,variant:"middle",className:"divider"}),e.jsxs(m,{children:[e.jsx(n,{variant:"h5",gutterBottom:!0,children:"Technologies Used"}),e.jsx(u,{children:Object.entries(a.technologies).map(([r,t],s)=>e.jsxs(g,{children:[e.jsx(v,{style:{width:"1%",marginRight:"1%"}}),e.jsx(x,{primary:`${r}: ${t?t.join(", "):""}`})]},s))})]})]}),e.jsx("div",{className:"desc"})]})})})},A=i=>{const[o,a]=h.useState(!1),[l,f]=h.useState(i.modal.imgNum>0),j=()=>{a(!0)},p=()=>{a(!1)};return h.useEffect(()=>{const r=()=>{const t=document.body;o?t.style.overflowY="hidden":t.style.overflowY="scroll"};return r(),()=>{r()}},[o]),e.jsxs("div",{children:[e.jsx(b,{className:"project-card",onClick:j,children:e.jsxs(E,{className:"contents",children:[e.jsx("div",{className:"icon-container",children:e.jsx("img",{className:"icon",src:i.coverImg,alt:"logo",loading:"lazy"})}),e.jsx(n,{className:"title",children:i.title})]})}),e.jsx(T,{open:o,onClose:p,style:{backdropFilter:"blur(5px)"},children:e.jsx("div",{children:e.jsx(R,{enablePictures:l,onClose:p,...i.modal})})})]})},P={proj1:{title:"Varsonalia PW - Event website",coverImg:"/img/Projects/varsonalia.jpg",modal:{title:"Varsonalia PW - Event website",desc:`Varsonalia / Juwenalia PW is a music event hosted by Warsaw University of Technology every year.  In the 2023 edition I was main person responsible for leading the team of 4 (including me), building  from scratch and deploying event's website with required software. Project was divided into  2 main parts. First was the front-end application, built according to obtained design. Core  of the app was static CSR website with two dynamic parts, one being photo gallery and the other  being chat for sending user's message to main stage large screen. Main technology used in the  front-end app was React.js. The backend app run photo gallery and panel for messages moderation  before sending them onto the stage screen. Backend was created in Django with PostgreSQL database,  nginx reverse-proxy, all deployed on Google Cloud Platform. Overall project was a great success as  the whole application was used throughout the event with no major issues and was used by more than  3000 users during the event and over 10_000 users overall.
`,link:"https://juwenalia.pw.edu.pl/",projstructure:{part1:{title:"Frontend",desc:"Built according to the obtained design."},part2:{title:"Backend",desc:"Responsible for running the photo gallery and message moderation panel before sending them to the stage screen."}},features:{feature1:{title:"Static CSR Website",desc:`The core of the app was a static CSR website with two dynamic parts: 
photo gallery and chat for sending user messages to the main stage large screen
`}},technologies:{Frontend:["React.js","Scss"],Backend:["Django","PostgreSQL","REST API","Docker","Python","Google Cloud Platform"]},imgSrc:"/img/Projects/varsonalia",imgNum:6,duration:"7 months"}},proj2:{title:"Smarthome system",coverImg:"/img/Projects/smarthome.jpg",modal:{title:"Smarthome system",desc:`One of amateur I upgraded my home using OpenHAB, a smart home system. I made regular lights smart by tweaking  Sonoff Mini R2 switches. Also, I built a gadget with ESP32 to automate window blinds. Everything  connects through WiFi using MQTT, letting me control it all from one place. It's a DIY setup that adds convenience and energy savings to daily life.
`,projstructure:{part1:{title:"Lighting Automation",desc:"Converted regular lights to smart lights using Sonoff Mini R2 switches."},part2:{title:"Window Blinds Automation",desc:"Developed a device using ESP32 for automating window blinds."}},features:{feature1:{title:"Centralized Control",desc:"Integrated all devices using OpenHAB and MQTT for centralized control."}},technologies:{Frontend:["OpenHAB (Linux Smart Home distribution)"],Backend:["Sonoff Mini R2","ESP32","MQTT","C"]},imgSrc:"/img/Projects/smarthome",imgNum:0,duration:"3 months"}},proj3:{title:"Embedded interpreter",coverImg:"/img/Projects/embedded.jpg",modal:{title:"Embedded interpreter",desc:`I led a project to build an Embedded Interpreter for a custom language that controls robotic arms.  My role involved collaborating with the client and implementing the language using Flex and Bison C frameworks.  This interpreter enables precise control of robotic arms, enhancing their functionality and operational efficiency.
`,projstructure:{part1:{title:"Language Implementation",desc:"Developed the custom language for robotic arm control using Flex and Bison."},part2:{title:"Client Collaboration",desc:"Worked closely with the client to ensure the language met their needs and specifications."}},features:{feature1:{title:"Custom Language",desc:"Designed and implemented a custom language for precise robotic arm control."}},technologies:{Interpreter:["C","Flex & Bison C frameworks"]},imgSrc:"/img/Projects/embedded",imgNum:0,duration:"7 months",tags:["C","Bison&Flex","Python","Teensy4.1(Cortex-M7)"]}},proj4:{title:"OTA Bootloader (BLE + WiFi)",coverImg:"/img/Projects/ota.jpg",modal:{title:"OTA Bootloader (BLE + WiFi)",desc:`Developed an over-the-air (OTA) update bootloader application for an STM32F3 MCU, supporting both BLE and Wi-Fi connectivity.  I created a working prototype that enables seamless firmware updates without physical connections.
`,projstructure:{part1:{title:"BLE Connectivity",desc:"Integrated BLE support for wireless firmware updates."},part2:{title:"Wi-Fi Connectivity",desc:"Enabled Wi-Fi support for efficient and faster OTA updates."},part3:{title:"Bootloader app",desc:"Manages saving incomming chunks of an app to chip memory."}},features:{feature1:{title:"Wireless Firmware Updates",desc:"Provided a robust solution for updating firmware over the air using BLE and Wi-Fi."}},technologies:{OTA:["C","STM32F3 (Cortex-M4)","BLE 4.1","Wi-Fi","Python"]},imgSrc:"/img/Projects/ota",imgNum:5,duration:"6 months"}},proj5:{title:"Underwater camera - PCB design",coverImg:"/img/Projects/anemo.jpg",modal:{title:"Underwater camera - PCB design",desc:`Led the design and development of an advanced submersible camera system for monitoring marine life.  The project focused on enhancing battery efficiency using the STM32L073RB chip and included DC-DC converters for optimal power management.  The design also featured a sophisticated battery pack, SPI interface for I/O expander, SD card integration, and communication protocols like RS485 MODBUS and UART.  Successfully manufactured and tested the PCB, developing firmware for seamless hardware-software integration.
`,projstructure:{part1:{title:"Hardware Design",desc:"Designed the PCB and integrated various components for optimal functionality."},part2:{title:"Firmware Development",desc:"Developed firmware to control the submersible camera system efficiently."}},features:{feature1:{title:"Enhanced Battery Efficiency",desc:"Implemented low-power CPU and DC-DC converters for improved battery life."},features2:{title:"Extended in-field operation time",desc:"Up to one month of continuous operation."}},technologies:{Firmware:["C","Python","Rust (Tauri)","STM32L073"]},imgSrc:"/img/Projects/anemo",imgNum:5,duration:"4 months"}},proj6:{title:"Car Sharing Seeker - Mobile App",coverImg:"/img/Projects/greenmobilityseeker.jpg",modal:{title:"Car Sharing Seeker - Mobile App",desc:`Developed an app to quickly find Green Mobility cars nearby for charging, rewarding users with free minutes for future trips.  The app uses open APIs to retrieve car and EV charger data, calculating the distance from the user to the charger and net gain minutes.  Despite limited mobile app development experience, the first working iteration was completed in 72 hours, thanks to AI assistance for generating the core codebase. App was created during university hackaton for life enhancement.
`,projstructure:{part1:{title:"Data Retrieval",desc:"Used open APIs to gather data on available cars and EV chargers."},part2:{title:"Rapid Development",desc:"Achieved rapid development and deployment with AI assistance, completing the first iteration in 72 hours."}},features:{feature1:{title:"Efficient Car Locator",desc:"Provides users with quick access to nearby Green Mobility cars and EV chargers."}},technologies:{App:["Dart","REST API"]},imgSrc:"/img/Projects/greenmobilityseeker",imgNum:5,duration:"48 hours"}}},ie=()=>e.jsxs("div",{className:"projects-container",id:"projects",children:[e.jsx("div",{className:"header",children:e.jsx("span",{className:"title",children:"Projects I worked on:"})}),e.jsx(y,{container:!0,className:"cards-container",children:Object.keys(P).map(i=>e.jsx(y,{item:!0,className:"card-grid-item",children:e.jsx(A,{...P[i]})},i))})]});export{ie as default};
